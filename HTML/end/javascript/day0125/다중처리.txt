용량이 큰 파일을 읽거나 네트워크 등을 통해 데이터를 가져올 시 동시 처리와 같은 효과로 가져오기 위해 시ㅐㅇ

1. 멍티프로세싱 ; 프로세스 여러개를 만들어 여러개의 프로세스가 하나의 목겆을 위해 움직임.
                초창기에 많이 사용함
                문제 > 프로세스는 서로 완전 독립적이기 때문에 데이터 공유가 불가
                따라서 os를 통해 데이터를 주고 받아야 함 >> ipc
                IPC는 주로 필터 파이프 메일 슬롯 등을 사용함
                리눅스 os에서는 좀비프로세스 문제를 야기함
2. 멀티스레딩 : 하나의 프로세스를 여러개로 쪼개서 해당 조각을 스레드라고 한다.
                여러개의 스레드가 시간을 쪼개 cpu를 차지해 동시에 작업하는 듯한 상황을 만든다.
                동일 프로세스에서 작동하기 때문에 자료 교환은 쉬우나
                자원 사용 중 쫒겨날 가능성이 있어 잘못된 결과가 나올 가능성이 있다 >> 동기화 문제를
3. 비동기 방식 :    동기식 방법은 일을 순차적으로 진행함 A > B > C 각 동작의 종료와 함께 다음 task가 실행됨
                    그러나 비동기 방식은 각 task를 시작 후 바로 리턴해 해당 업무를 백그라운드레서 작업할 수 있도록 한다.
                    A ----끝
                    B --------끝
                    C --끝

                    일이 종료하는 선후는 없다. 각각 일이 끝나고 나면 콜백함수 호출을 통해 일의 완료를 알려준다.
                    보통 함수들이 매개변수로 콜백함수를 요청한다. 
                    해당 함수를 전달하면 실제 일이 모두 완료되었을 떄 이 콜백함수를 호출한다.

                    //자바 7부터 비동기를 지원한다.

1. 함수형 언어다
함수도 변수다
변수에 함수의 주소를 저장할 수 있다. -> 이는 함수의 표현식(ex. filter) 이나 람다로 발전(화살표 함수)
함수의 매개변수로 함수를 줄 수 있음 -> 콜백함수
함수의 반환값이 함수일 수 있음 / 함수 내에 함수를 만들어서 반환 가능 > 클로저

2. LAZY 초기화
생성자에 의한 초기화 => LAZY초기화
let 변수먕 new 클래스명();
//생성자에서 초기화 - 메모리할당, 디비연결 ...
생성자를 두고 init함수를 만들어서 처리한다
안드로이드 GUI 프로그램

htmlanstj tkdeksdp <header></header> 사이에 자바스크립트 코드를 두엇다
자바스크립트는 dom 객체를 제어하려고 한다.
dom 객체는 우리가 만든 HTML 문서의 태그를 객체화 새켜 DOM tree를 만든다
접근코드는 먼저 만든 후 실제 객체는 나주엥 만든다.
window.onload 에서 모든 코드를 두라는 말은 HTML 문서가 DOM 객체화 한 이후헤
자바스크립트가 호출되어야 한다는 말이다.

3. 엄격한 타입체크 - 모던스크립트는 변수에 타입 선언을 못한다.
    타입스크립트 > 타입선언(int, String) 이 가능하다. 이를 통해 타입 안정성을 높이려햇다

    모던스크립트는 새로 만든언어가 아닌 자바스크립트를 발전시킨 언어이다.

    let a;
    a = "hello"
    a="{}

    //사소가 예측 가능해야한다 -> 타입스크립트
    // 자바의 Generic => 타입안정성
    모던스크립트 만으로는 타입안정성이 떨어진다

4. 편리성 // 동일 알고리즘 정렬 등을 편리하게 하기위함
    자주 사용하는 코드들을 라이브러리로 생성
    LinkedList, Stack, Queue, Tree, Map ....
        1) 인터페이스 - java 전역함수를 안됨 람다도 인터페이스 기반
        2) iterator
        3) lamda    - 함수가 반이다
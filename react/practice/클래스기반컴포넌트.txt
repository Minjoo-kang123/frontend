props : 부모 컴포넌트 입장에서 자식컴포넌트한테 값이나 참조를 전달하고자 할 때 
        값의 경우는 key ="값1"
        참조의 경우 키 = {변수명} , 배열, 객체, 함수

state : 함수나 클래스 내부에서 존재. 상태정보를 저장한다. (객체와 유사함 / get set)

class의 경우에는 this.state or this.props를 사용해 접근했으나
함수의 경우 this를 사용 불가한다. 대신 hook을 이용해 사용이 가능해졌다.
useState 와 함수의 매개변수를 이용해 접근이 가능해지며 함수기반 컴포넌트의 사용으로 흐름이 넘어감

마운트 : 태그와 변수들, state, props 같은 것들이 연동되는 동작

자바스크립트 / 타입

스프링프레임워크    => 외장 톰캣, jsp 엔진, 프로젝트 배포시 war형식 사용
                    mvc(model view controller), json 라이브러리는 내장 되어있지 않음

스프링 부트     => view를 다른 곳에 독립 mvc 방식
                view -> react, vue, angular
                DB를 직접적으로 사용하는 것 없이 ajax 통신을 통해 백엔드와 데이터를 받아온다.
                백엔드/프론트엔드 완전 분리
                벡엔드에 최적화, 내장 폼캣 사용, 배포시 jar형식 사용 jsp 사용x
                jsp 사용 시 배포는 war를 사용해야함
                관ㄹㅣ자 화면 => thymleaf, mustache

full stack  =>  개발자가 프론트 백 배포까지 책임짐 / CI/CD(Doker, 쿠버네티스)
                json 라이브러리 내장형, Restful API Server에 최적화


RDBMS(Relatoinal Database Management System) 프로그램
Oracle, mysql mssql
oracle =>  대용량 데이터 처리, 색인 순차검색(index)를 지원한다.
            튜닝을 통해 속도 상승이됨. 오라클과 PL/SQL 프로그래밍 안에
            오라클 엔진이 해석하는 언어이다. 함수(반환값 존재시)를 만들고 프로지서(반환값 미존재시)
            두개를 함쳐서 함수라고 부른언어가 C언어
            대용량 데이터처리의 경우 이를 웹페이지로 호출시
            100만개를 예로 들면
            1page 100개 읽어와서 전체 선택 후 마감 100
            2page 100개 읽어와서 전체 선택 후 마감 100
            3page 100개 읽어와서 전체 선택 후 마감 100

            PL/SQL로 디비 안에서 프로그램을 만들어서 돌린다
            DB엔진이 스스로 처리 => 말일마다 스스로 돌림

mysql >     무료인 MariaDB를 많이 사용함
            장점 : 클라우드에서 라이선스를 가지고 있는 경우가 많아 클라우드 포팅시 편함
            오라클에 비하면 속도가 느려 검색 속도 향상을 위한 redis라는 메모리DB를 보조적으로 사용하는 추세

NOSQL DB    비정형 자료 저장 / mongodb : JSON객체배열로 저장함 자바스크립트를 이용해
            데이터 CRUD 및 검색을 담당 빅 데이터 분성용